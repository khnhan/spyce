% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_SPYCE_param12.R
\name{get_SPYCE_param12}
\alias{get_SPYCE_param12}
\title{SPYCE for (beta, sigma) with parametrically estimated \eqn{f_{X\mid Z}} and \eqn{f_{C\mid Y,Z}}}
\usage{
get_SPYCE_param12(
  y_data,
  w_data,
  delta_data,
  z_data = NULL,
  init,
  sigma_fixed = NULL,
  w_min,
  w_max,
  tt = 20,
  m = 20,
  nleqslv_args = list()
)
}
\arguments{
\item{y_data}{Numeric vector.}

\item{w_data}{Numeric vector of \eqn{W=\min(X,C)}.}

\item{delta_data}{Logical or \{0,1\} vector: \eqn{\Delta=1\{X \le C\}}.}

\item{z_data}{Optional numeric vector (default \code{NULL}); if provided, must match length of \code{y_data}.}

\item{init}{Numeric vector of free parameters:
\itemize{
\item Case A: \code{c(beta0,beta1,beta2,beta3, sigma)}
\item Case B: \code{c(beta0,beta1, sigma)}
\item Case C: \code{c(beta0,beta1,beta2,beta3)}
\item Case D: \code{c(beta0,beta1)}
}}

\item{sigma_fixed}{Optional positive scalar; if supplied, \eqn{\sigma} is treated as known.}

\item{w_min, w_max}{Numeric bounds for the truncation interval used inside the nuisance likelihood.}

\item{tt}{Number of grid points where the integral is computed; defaults to 20.}

\item{m}{Number of grid points between \code{w_min} and \code{w_max} for which the integral equation is solved; defaults to 20.}

\item{nleqslv_args}{Named list of extra args passed to \code{nleqslv::nleqslv()}.}
}
\value{
list with \code{$beta_SPYCE_param12}, \code{$sigma_SPYCE_param12}, \code{$root}.
}
\description{
Solves the efficient estimating equation
\deqn{\sum_{i=1}^n S_{\mathrm{eff}}(Y_i,W_i,\Delta_i,Z_i;\theta)=0}
via \code{nleqslv}, where
\eqn{S_{\mathrm{eff}}} is the efficient score function.

Supported modes:
\itemize{
\item (A) estimate \eqn{(\beta,\sigma)} with \code{z_data}
\item (B) estimate \eqn{(\beta,\sigma)} without \code{z_data}
\item (C) estimate \eqn{\beta} with \code{z_data} and fixed \code{sigma}
\item (D) estimate \eqn{\beta} without \code{z_data} and fixed \code{sigma}
}
}
\section{Model and nuisance estimation}{

\itemize{
\item With \code{z_data} present, then \eqn{Y\mid X,Z \sim \mathcal{N}\!\big(\beta_0+\beta_1 X+\beta_2 Z+\beta_3 ZX,\ \sigma^2\big)}, \eqn{X\mid Z \sim \mathrm{TN}\!\big(\alpha_{10}+\alpha_{11} Z,\ \tau_1^2;\ w_{\min}, w_{\max}\big)}, and \eqn{C\mid Y,Z \sim \mathrm{TN}\!\big(\alpha_{20}+\alpha_{21}Y+\alpha_{22}Z,\ \tau_2^2;\ w_{\min}, w_{\max}\big)}.
\item Without \code{z_data}, then \eqn{Y\mid X \sim \mathcal{N}\!\big(\beta_0+\beta_1 X,\ \sigma^2\big)}, \eqn{X \sim \mathrm{TN}\!\big(\alpha_1,\ \tau_1^2;\ w_{\min}, w_{\max}\big)}, and \eqn{C\mid Y \sim \mathrm{TN}\!\big(\alpha_{20}+\alpha_{21}Y,\ \tau_2^2;\ w_{\min}, w_{\max}\big)}.
In all cases, the truncated-normal nuisance parameters \eqn{(\alpha_1,\tau_1)} for \eqn{X\mid Z} and  \eqn{(\alpha_2,\tau_2)} for \eqn{C\mid Y,Z} are estimated by maximum likelihood on \eqn{[w_{\min},w_{\max}]} at each iterate of \eqn{(\beta,\sigma)} (or \eqn{\beta} when \code{sigma_fixed} is supplied).
}
}

\examples{
library(truncnorm)
set.seed(1)
n = 500; beta = c(0, 3); sigma = 4
# Data generation
# Y|X ~ N(beta_0 + beta_1 X, 1)
x_data = rtruncnorm(n, a = -1, b = 1, mean = 0, sd = 1)
y_data = cbind(1,x_data) \%*\% beta + sigma * rnorm(n)
c_data = rtruncnorm(n, a = -1, b = 1, mean = 0, sd = 1)
z_data = rbinom(n, size = 1, prob = 0.6)
# Generate W and Delta from X and C
w_data = pmin(c_data,x_data)
delta_data = as.numeric(x_data<=c_data)
# Set w_min and w_max
w_min = min(w_data) - sd(w_data)
w_max = max(w_data) + sd(w_data)
# CASE A: true = (0, 3, 0, 0, 4)
get_SPYCE_param12(y_data,
                  w_data,
                  delta_data,
                  z_data,
                  init = c(0.5, 2.5, 0.1, 0.1, 3.5),
                  w_min = w_min, w_max = w_max,
                  nleqslv_args = list())
# CASE B: true = (0, 3, 4)
get_SPYCE_param12(y_data,
                  w_data,
                  delta_data,
                  init = c(0.5, 2.5, 3.5),
                  w_min = w_min, w_max = w_max,
                  nleqslv_args = list())
# CASE C: true = (0, 3, 0, 0)
get_SPYCE_param12(y_data,
                  w_data,
                  delta_data,
                  z_data,
                  init = c(0.5, 2.5, 0.1, 0.1),
                  w_min = w_min, w_max = w_max,
                  sigma_fixed = 4,
                  nleqslv_args = list())
# CASE D: true = (0, 3)
get_SPYCE_param12(y_data,
                  w_data,
                  delta_data,
                  init = c(0.5, 2.5),
                  w_min = w_min, w_max = w_max,
                  sigma_fixed = 4,
                  nleqslv_args = list())
}
